<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Build Personal Website with Hexo and GitHub Pages</title>
    <link href="/2024/11/14/Build-Personal-Website-with-Hexo-and-GitHub-Pages/"/>
    <url>/2024/11/14/Build-Personal-Website-with-Hexo-and-GitHub-Pages/</url>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>It has been a long time since I would like to own a particular space to record my work and enjoy my hobby of writting, and until now I’ve finally started creating my personal website here. Among a variety of schemes, I adopt <code>Hexo</code> + <code>GitHub Pages</code>, which is friendly to noob like me.</p><p>Hexo is a fast, simple &amp; powerful blog framework. Simply write post in Markdown and Hexo generates static files deployed to GitHub Pages. </p><p>As the first post, I am writing this article just in case anyone who is also interested in having a personal website but hasn’t been prepared yet. On the other hand, it will be an importent reference for myself to re-create the environment efficiently when I change the Mac or migrate data in the future.</p><h2 id="Environment-setup"><a href="#Environment-setup" class="headerlink" title="Environment setup"></a>Environment setup</h2><h3 id="Install-Node-js-locally"><a href="#Install-Node-js-locally" class="headerlink" title="Install Node.js locally"></a>Install <code>Node.js</code> locally</h3><p><code>Node.js</code> is a free, open-source, cross-platform (Mac OS, Window, Linux), and JavaScript runtime environment that lets developers create servers, web apps, command line tools and scripts.</p><p>Navigate to Node.js <a href="https://nodejs.org/en">webpage</a> and select the appropriate installation file to download according to your local environment.</p><ul><li>For Windows and Mac OS users, click the installer file to install it.</li><li>For Linux users, the installation is somewhat complicated. The following two installation methods are recommended, and you can choose one of them:<ul><li>Compile and install from source code without configuring bash, but compiling takes time, see the <a href="https://cloud.tencent.com/developer/article/1938607">reference</a></li><li>Download and install the binary file, you need to configure the bash environment, see the <a href="https://cloud.tencent.com/developer/article/1772306">reference</a></li></ul></li></ul><p>After the installation is complete, enter the following commands in the terminal:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$ npm -v<br>$ node -v<br></code></pre></td></tr></table></figure><p>If there are output with version numbers, the installation of Node.js is successful in your local computer.</p><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><p>Git is a distributed version control system that tracks versions of files. It is often used to control source code by programmers who are developing software collaboratively.</p><p>If you are not familiar with Git, or you have heard of Git but want to know more about it, you can come to the lesson materials from <a href="https://coderefinery.org/">CodeRefinery</a></p><ul><li><a href="https://coderefinery.github.io/git-intro/">Introduction to version control with Git</a></li><li><a href="https://coderefinery.github.io/git-collaborative/">Collaborative distributed version control</a></li></ul><p>Following the instructions <a href="https://github.com/git-guides/install-git">HERE</a> to install Git.</p><p>After the installation, right-click the mouse anywhere on your desktop or in a folder. If you see the following options:</p><ul><li><code>Open Git GUI here</code></li><li><code>Open Git Bash here</code></li></ul><p>then Git has been successfully installed on your computer.</p><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p>Hexo is a fast, simple, and powerful blogging framework powered by Node.js. It allows users to create static websites, blogs, or portfolios with minimal setup. Hexo uses Markdown files for content, which makes it easy to write posts, and it generates static HTML files, which makes it fast for hosting.</p><p>Moreover, Hexo provides many <a href="https://hexo.io/docs/themes">themes</a> that you can easily integrate to your blog with a full of customization.</p><p>Once Node.js and Git are successfully installed, you can use npm (Node Package Manager) to install Hexo:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ npm <span class="hljs-keyword">install</span> -g hexo-cli<br>$ npm <span class="hljs-keyword">install</span> hexo<br></code></pre></td></tr></table></figure><h3 id="Initialize-Hexo"><a href="#Initialize-Hexo" class="headerlink" title="Initialize Hexo"></a>Initialize Hexo</h3><p>Once Hexo is installed, run the following commands to initialize Hexo in the target <code>&lt;my-website&gt;</code>.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> hexo init &lt;my<span class="hljs-literal">-website</span>&gt;<br><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> &lt;my<span class="hljs-literal">-website</span>&gt;<br><span class="hljs-variable">$</span> npm install<br></code></pre></td></tr></table></figure><p>This will creates a new directory (<code>&lt;my-website&gt;</code>) with the default&#x2F;essential structure of a Hexo site and installs the required dependencies. Your project folder will look like:</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs 1c">.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br><span class="hljs-string">|   ├── _drafts</span><br><span class="hljs-string">|   └── _posts</span><br>└── themes<br></code></pre></td></tr></table></figure><ul><li>The <code>_config.yml</code> is the “site config” file in Hexo root dict, personalize the top contents like <code>title</code>, <code>subtitle</code>, <code>author</code>, <code>description</code> and other global settings.</li><li>The <code>package.json</code> file contains the application data. The <a href="https://ejs.co/">EJS</a>, <a href="https://stylus-lang.com/">Stylus</a> and <a href="https://daringfireball.net/projects/markdown/">Markdown</a> renderers are installed by default.</li><li>Scaffold folder: When you create a new post, Hexo bases the new file on the scaffold.</li><li>Source folder: This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with _ (underscore) - except the _posts folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the public folder, while other files will simply be copied.</li><li>Theme folder: Hexo generates a static website by combining the site contents with the theme.</li></ul><p>Run the following basic commands to compile Hexo</p><ul><li><code>hexo clean</code> to clear the static files and cache</li><li><code>hexo g</code> to generate static web files locally</li><li><code>hexo s</code> to start a local sever for preview<ul><li>Hexo will be run at <code>localhost:4000</code> by default. Now open <code>http://localhost:4000</code> in your browser to see the result. </li><li><img src="/img/hexo-githubpage/hexo-s.jpg" alt="hexo-s"></li></ul></li><li><code>hexo d</code> to deploy after generation finish (will talk this part in the following section)</li></ul><hr><h2 id="Customize-Hexo-theme"><a href="#Customize-Hexo-theme" class="headerlink" title="Customize Hexo theme"></a>Customize Hexo theme</h2><p>The Hexo community provides a lot of themes that you can choose to personalize your website. Navigate to the <a href="https://hexo.io/themes/">Hexo themes</a> and select one to make your website attractive and professional.</p><p>Personally, I like <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a>, an elegant Material-Design theme, particularly for writing posts. If you prefer the other themes, the configuration method should be similar.</p><ul><li>Download Fluid theme and then the <code>_config.fluid.yml</code> file in root dict is created for custom.<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure></li><li>Modify <code>_config.yml</code> in root dict via replacing the theme config with your new theme name.<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta"># Extensions</span><br><span class="hljs-symbol">theme:</span> fluid<br></code></pre></td></tr></table></figure></li></ul><p>Run the command <code>hexo s</code> again and open the <code>http://localhost:4000</code> in your browser to see the result using the Fluid theme. </p><p><img src="/img/hexo-githubpage/hexo-fluid-theme.jpg" alt="hexo-fluid-theme"></p><p>For more configuration, please refer to <a href="https://hexo.fluid-dev.com/docs/en/start/">Hexo Fluid Docs</a>.</p><hr><h2 id="Personalize-domain"><a href="#Personalize-domain" class="headerlink" title="Personalize domain"></a>Personalize domain</h2><p><a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#about-github-pages">GitHub Pages</a> is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process, and publishes a website.</p><p>To publish a user site, we can follow the <a href="https://pages.github.com/">getting started instructions</a> to set up your site using GitHub Pages.</p><h3 id="Create-a-GitHub-Pages-repository"><a href="#Create-a-GitHub-Pages-repository" class="headerlink" title="Create a GitHub Pages repository"></a>Create a GitHub Pages repository</h3><p>We should create a repository on GitHub.</p><ul><li>In the upper-right corner of any page of your Github account, select <code>+</code>, then click <code>New repository</code><ul><li><img src="/img/hexo-githubpage/github-new-repository.jpg" alt="github-new-repository"></li></ul></li><li>Enter <code>&lt;username&gt;.github.io</code> as the repository name. For example, if your username is octocat, the repository name should be <code>octocat.github.io</code>. This link will end up being the base URL of your website.<ul><li><img src="/img/hexo-githubpage/github-repo-name.jpg" alt="github-repo-name"></li></ul></li><li>Choose a repository visibility (<code>Public</code> or <code>Private</code>).</li><li>Select <code>Initialize this repository with a README</code>.</li><li>Click <code>Create repository</code>.</li></ul><h3 id="Generate-a-SSH-key"><a href="#Generate-a-SSH-key" class="headerlink" title="Generate a SSH key"></a>Generate a SSH key</h3><p>You can generate a new SSH key on your local machine. After you generate the key, you can add the public key to your account on GitHub.com to enable authentication for Git operations over SSH.</p><ul><li>Open Git Bash.</li><li>Paste the text below, replacing <code>&lt;your_email&gt;</code> with your GitHub email address.  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;&lt;your_email&gt;&quot;</span><br></code></pre></td></tr></table></figure><ul><li>When you’re prompted to “Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;XXX&#x2F;.ssh&#x2F;id_ed25519):”, you can press Enter to accept the default file location.</li><li>Please note that if you created SSH keys previously, ssh-keygen may ask you to rewrite another key, in which case we recommend creating a custom-named SSH key.</li></ul></li><li>Type a secure passphrase when you see the following output at the prompt:  <figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">&gt; Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): [<span class="hljs-keyword">Type</span> <span class="hljs-type">a </span>passphrase]<br>&gt; Enter same passphrase again: [<span class="hljs-keyword">Type</span> <span class="hljs-type">passphrase </span>again]<br></code></pre></td></tr></table></figure></li></ul><h3 id="Add-the-SSH-key-to-your-Github-account"><a href="#Add-the-SSH-key-to-your-Github-account" class="headerlink" title="Add the SSH key to your Github account"></a>Add the SSH key to your Github account</h3><p>You can add the generated SSH key and use it for authentication, or commit signing, or both. </p><ul><li>Copy the SSH public key to your clipboard.</li><li>In the upper-right corner of any page on GitHub, click your profile photo, then click <code>Settings</code>.<ul><li><img src="/img/hexo-githubpage/github-global-setting.jpg" alt="github-global-setting"></li></ul></li><li>In the <code>Access</code> section of the sidebar, click <code>SSH and GPG keys</code>.<ul><li><img src="/img/hexo-githubpage/github-ssh-key.jpg" alt="github-ssh-key"></li></ul></li><li>Click the green button with the name of <code>New SSH key</code> or <code>Add SSH key</code><ul><li><img src="/img/hexo-githubpage/github-new-ssh.jpg" alt="github-new-ssh"></li></ul></li><li>In the “Title” field, add a descriptive label for the ssh key.</li><li>Select the type of key, either <code>Authentication Key</code> or <code>Signing Key</code>.</li><li>Paste your public key in the “Key” field.</li><li>Click <code>Add SSH key</code>.<ul><li><img src="/img/hexo-githubpage/github-add-ssh-key.jpg" alt="github-add-ssh-key"></li></ul></li><li>GitHub will prompt you to enter your password for confirmation.</li><li>Test your SSH connection via Git Bash prompt (windows users) and terminal (Mac OS and Linux users)<ul><li>Enter the command <code>ssh -T git@github.com</code></li><li>You may see a warning like this:  <figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">The</span> authenticity <span class="hljs-keyword">of</span> host <span class="hljs-string">&#x27;github.com (IP ADDRESS)&#x27;</span> can<span class="hljs-string">&#x27;t be established.</span></span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-string">ED25519 key fingerprint is SHA256:+(XXXXX).</span></span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-string">Are you sure you want to continue connecting (yes/no)?</span></span><br></code></pre></td></tr></table></figure></li><li>Verify the fingerprint in this message matches GitHub’s public key fingerprint. If it does, then type yes and you will theoretically get   <figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Hi</span> <span class="hljs-variable constant_">USERNAME</span>! <span class="hljs-title class_">You</span><span class="hljs-string">&#x27;ve successfully authenticated.</span></span><br></code></pre></td></tr></table></figure></li><li>If you receive a “permission denied” message, you can come to the <a href="https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey">Error: Permission denied (publickey)</a> webpage to see how to solve this problem.</li></ul></li></ul><h3 id="Update-config-yml-in-root-dict"><a href="#Update-config-yml-in-root-dict" class="headerlink" title="Update _config.yml in root dict"></a>Update <code>_config.yml</code> in root dict</h3><p>As we have adopted the <code>Fluid</code> theme in the <code>_config.yml</code> file, we scroll down to the bottom of this file and update it with your depolyment target information.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">https://github.com/&lt;username&gt;/&lt;username&gt;.github.io</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>At the root dict, right-click the mouse and click <code>Open Git Bash Here</code> and then run the following basic commands</p><ul><li><code>hexo clean</code> to clear the static files and cache</li><li><code>hexo g &amp;&amp; hexo s</code> to generate static web files locally and then to start a local sever at <code>http://localhost:4000/</code> for preview</li><li><code>hexo d</code> to deploy once you can make sure that all the info at <code>http://localhost:4000/</code> are correct<ul><li>your depolyment will be successful if you see the output <code>INFO  Deploy done: git</code></li><li>If there is an error info like <code>ERROR Deployer not found: git</code>, run the command <code>npm install hexo-deployer-git --save</code> and regenerate and redepoly your materials via   <figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo clean &amp;&amp; hexo <span class="hljs-keyword">generate</span><br>hexo deploy<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Update-GitHub-repository"><a href="#Update-GitHub-repository" class="headerlink" title="Update GitHub repository"></a>Update GitHub repository</h3><ul><li>Come to the Github repository for your personal website, which should be <code>https://github.com/&lt;username&gt;/&lt;username&gt;.github.io</code>, and then the <code>Settings</code> at upper part of your web brower.</li><li>In the <code>Code and automation</code> section of the sidebar, click <code>Pages</code>.<ul><li>In the <code>Build and deployment/Source</code> section, you should choose <code>Deploy from a branch</code></li><li>Select <code>main/(root)</code> at the <code>Branch</code> section and <code>save</code> it</li></ul></li><li>Wait for several minutes and you will see the URL for your personal website.<ul><li>if you have your own custom domain, you can follow the instructions <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site">HERE</a> and add it to GitHub Pages</li></ul></li></ul><p><img src="/img/hexo-githubpage/github-depolyment.jpg" alt="github-depolyment"></p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>At the root dict of Hexo project (<code>&lt;my-website&gt;</code>), right-click the mouse and click <code>Open Git Bash Here</code></p><ul><li>run the command <code>hexo new &quot;NEW hello world&quot;</code> and it will create a new file (<code>NEW-hello-world.md</code>) in <code>&lt;PATH&gt;/source/_posts/&gt;</code> with some default front-matter.</li><li>Edit this file and add content to your post with basic <a href="https://www.markdownguide.org/basic-syntax/">Markdown Syntax</a>.</li><li>run the Hexo commands mentioned above to generate static HTML files and then depoly these new files to Github Page.</li></ul><p>After deployment, visit <code>https://&lt;username&gt;.github.io</code> to see your live site.</p><p><img src="/img/hexo-githubpage/new-hello-world.jpg"></p><hr><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Using GitHub Pages to build a personal website and distinguish yourself with a recognizable identity and external brand in your communities of interest is a worthwhile endeavor if you’re willing to spend some extra time setting things up.<br>Hexo and Github Page become such a great tool for you.<br>This pairing is a convenient, performant and free blogging platform.<br>With its simplicity and its community, it’s easy to set up, allowing you to just focus on what matters: Your sharing.<br>I hope you find this post useful.</p>]]></content>
    
    
    <categories>
      
      <category>Website</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Github Pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NEW hello world</title>
    <link href="/2024/11/13/NEW-hello-world/"/>
    <url>/2024/11/13/NEW-hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="This-is-another-blogpost"><a href="#This-is-another-blogpost" class="headerlink" title="This is another blogpost"></a>This is another blogpost</h1><h2 id="1-Horizontal-Rules"><a href="#1-Horizontal-Rules" class="headerlink" title="1. Horizontal Rules"></a>1. Horizontal Rules</h2><hr><hr><h2 id="2-Typographic-replacements"><a href="#2-Typographic-replacements" class="headerlink" title="2. Typographic replacements"></a>2. Typographic replacements</h2><p>Enable typographer option to see result.</p><p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p><p>test.. test… test….. test?….. test!….</p><p>“Smartypants, double quotes” and ‘single quotes’</p><h2 id="3-Emphasis"><a href="#3-Emphasis" class="headerlink" title="3. Emphasis"></a>3. Emphasis</h2><p><strong>This is bold text</strong></p><p><em>This is italic text</em></p><p><del>Strikethrough</del></p><h2 id="4-Blockquotes"><a href="#4-Blockquotes" class="headerlink" title="4. Blockquotes"></a>4. Blockquotes</h2><blockquote><p>Blockquotes can also be nested…</p></blockquote><h2 id="5-Lists"><a href="#5-Lists" class="headerlink" title="5. Lists"></a>5. Lists</h2><p>Unordered</p><ul><li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li><li>Sub-lists are made by indenting 2 spaces:<ul><li>Marker character change forces new list start:<ul><li>Ac tristique libero volutpat at</li></ul><ul><li>Facilisis in pretium nisl aliquet</li></ul><ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li><li>Very easy!</li></ul><p>Ordered</p><ol><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li></ol><h2 id="6-Code"><a href="#6-Code" class="headerlink" title="6. Code"></a>6. Code</h2><p>Inline <code>code</code></p><p>Indented code</p><pre><code class="hljs">// Some commentsline 1 of codeline 2 of codeline 3 of code</code></pre><p>Block code “fences”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs conole">Sample text here...<br></code></pre></td></tr></table></figure><p>Syntax highlighting</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> foo = <span class="hljs-keyword">function</span> (<span class="hljs-params">bar</span>) &#123;<br>  <span class="hljs-keyword">return</span> bar++;<br>&#125;;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">foo</span>(<span class="hljs-number">5</span>));<br></code></pre></td></tr></table></figure><h2 id="7-Tables"><a href="#7-Tables" class="headerlink" title="7. Tables"></a>7. Tables</h2><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>path to data files to supply data</td></tr><tr><td>ext</td><td>extension to be used for dest files</td></tr></tbody></table><p>Right aligned columns</p><table><thead><tr><th align="right">Option</th><th align="center">Description</th></tr></thead><tbody><tr><td align="right">data</td><td align="center">path to data files to supply data</td></tr><tr><td align="right">ext</td><td align="center">extension to be used for dest files</td></tr></tbody></table><h2 id="8-Links-and-Images"><a href="#8-Links-and-Images" class="headerlink" title="8. Links and Images"></a>8. Links and Images</h2><p><a href="http://dev.nodeca.com/">link text</a></p><p><img src="https://octodex.github.com/images/dojocat.jpg" alt="Dojocat"></p>]]></content>
    
    
    <categories>
      
      <category>Website</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Github Pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/10/hello-world/"/>
    <url>/2024/11/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
